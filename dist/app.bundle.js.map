{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts","webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FileSaver","showcase","document","getElementById","addEventListener","sdk","contentWindow","MP_SDK","connect","e","console","error","log","lights","Scene","createNode","Sum","this","inputs","augend","addend","outputs","sum","onInputsUpdated","SumFactory","addComponent","start","register","node","comp1","comp2","comp3","getCursorPosition","cartesian","Pointer","intersection","subscribe","intersectionData","position","x","y","z","normal","Renderable","visible","color","opacity","update","THREE","context","three","material","Color","onInit","geometry","BoxGeometry","MeshLambertMaterial","transparent","mesh","Mesh","objectRoot","collider","onEvent","eventType","onTick","tickDelta","spawnerPosition","Spawner","CylinderGeometry","spawnNode","obj3D","set","spawner","events","rackArray","rackNodeArray","rackIndex","rackSelected","pastRackSelection","onclick","Component","FBX_LOADER","url","localScale","stop","rotation","Math","PI","scene","serialize","file","File","type","saveAs","nodes","reader","FileReader","event","fileList","target","files","onload","result","deserialize","length","readAsText","tick","requestAnimationFrame","b","XMLHttpRequest","open","responseType","a","response","onerror","send","status","dispatchEvent","MouseEvent","createEvent","initMouseEvent","window","f","self","global","HTMLAnchorElement","g","h","URL","webkitURL","j","createElement","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","navigator","msSaveOrOpenBlob","autoBom","warn","test","Blob","title","body","innerText","HTMLElement","safari","userAgent","onloadend","replace","readAsDataURL","k","Function"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","//////////////////////////////////////////////////////////\r\n//This begins the section that sets up the sdk\r\n\r\n//This is for saving the Scene.jsonn files\r\nvar FileSaver = require('file-saver');\r\n\r\n\r\n//This graps the iframe with id \"showcase\"\r\nconst showcase = document.getElementById(\"showcase\") as HTMLIFrameElement;\r\nconst key = \"96296aaaf1964968ad92128f7469bd99\";\r\n\r\n\r\n\r\n\r\n// declare this file is a module\r\nexport {};\r\n\r\n// augment window with the MP_SDK property\r\ndeclare global {\r\n  interface Window {\r\n    MP_SDK: any;\r\n  }\r\n}\r\n//Still not sure what this event listener business is, but here is where all the coding starts\r\nshowcase.addEventListener(\"load\", async function () {\r\n  let sdk;\r\n  try {\r\n    sdk = await showcase.contentWindow.MP_SDK.connect(showcase, key, \"3.2\");\r\n  } catch (e) {\r\n    console.error(e);\r\n    return;\r\n  }\r\n\r\n  console.log(\"%c  Hello Bundle SDK! \", \"background: #333333; color: #00dd00\");\r\n  console.log(sdk);\r\n\r\n  //This allows for what we add to actually be seen\r\n  //You can screw with the lights for a different effect.\r\n  //I thought maybe this could be used to display different modes, i.e. editing mode vs showing-off mode\r\n  const lights = await sdk.Scene.createNode();\r\n  lights.addComponent(\"mp.lights\");\r\n  lights.start();\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  //This is the Sum() example from the matterport.github.io page. This displays how to bind component inputs to outputs\r\n  //This is the architecture for defining, adding, and using components\r\n\r\n  //Define the component. I am not sure why it must be in the form of a function instead of a class\r\n  function Sum() {\r\n    //Inputs are mutable\r\n    this.inputs = {\r\n      augend: 0,\r\n      addend: 0,\r\n    };\r\n\r\n    //Outputs should not be mutable\r\n    this.outputs = {\r\n      sum: 0,\r\n    };\r\n\r\n    // if any input changes, recompute the sum.\r\n    this.onInputsUpdated = function () {\r\n      this.outputs.sum = this.inputs.augend + this.inputs.addend;\r\n    };\r\n  }\r\n\r\n  //This is the function that returns the new component. Necessary for adding it\r\n  function SumFactory() {\r\n    return new Sum();\r\n  }\r\n\r\n  //Quick display of the general structure and use of the sum component\r\n  //This is setting up an instance of the component\r\n  var sum = SumFactory();\r\n  sum.inputs.augend = 1;\r\n  sum.inputs.addend = 99;\r\n  sum.onInputsUpdated();\r\n  console.log(sum.outputs.sum);\r\n\r\n  //This is how you register the component to add it later\r\n  sdk.Scene.register(\"sum\", SumFactory);\r\n\r\n  //This is how you add the component. Create a node and then add components. The components to be bound need to be in the same node (I think)\r\n  var node = await sdk.Scene.createNode();\r\n  var comp1 = node.addComponent(\"sum\");\r\n  var comp2 = node.addComponent(\"sum\");\r\n  var comp3 = node.addComponent(\"sum\");\r\n\r\n  // This binds comp2's augend to comp1's sum. The order of arguments can be a little confusing.\r\n  comp1.bind(\"augend\", comp2, \"sum\");\r\n  comp1.bind(\"addend\", comp3, \"sum\");\r\n\r\n  node.start();\r\n\r\n  comp2.inputs.augend = 5;\r\n  comp3.inputs.addend = 6;\r\n\r\n  //This is necessary and the order is important. The highest component in the architecture needs to be called last.\r\n  comp2.onInputsUpdated();\r\n  comp3.onInputsUpdated();\r\n  comp1.onInputsUpdated();\r\n\r\n  console.log(\r\n      \"%c  \" + comp1.outputs.sum + \"  \",\r\n      \"background: #333333; color: #00dd00\"\r\n  );\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  //This function is to move stuff around. It returns the cursor position to be assigned to an object position\r\n\r\n  function getCursorPosition() {\r\n    var cartesian = [];\r\n\r\n    //Not sure what this does\r\n    sdk.Pointer.intersection.subscribe(function (intersectionData) {\r\n      cartesian = [\r\n          //This is the actual cartesian location. I believe this relies on raycasting from the three.js underneath\r\n        intersectionData.position.x,\r\n        intersectionData.position.y,\r\n        intersectionData.position.z,\r\n\r\n         //This is the normal vector to determine where on the object the user has clicked\r\n        intersectionData.normal.x,\r\n        intersectionData.normal.y,\r\n        intersectionData.normal.z,\r\n\r\n      ];\r\n      //console.log(cartesian)\r\n    });\r\n\r\n    return cartesian;\r\n  }\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  //This is an example of defining a class for a three.js primitive that will actually appear. It could be a cylinder, sphere, cube, text, etc.\r\n\r\n  function Renderable() {\r\n//Mutable inputs\r\n    this.inputs = {\r\n      name: null,\r\n      visible: false,\r\n      color: \"yellow\",\r\n      opacity: 1,\r\n    };\r\n\r\n//This is basically an \"onInputsUpdatedFunction\". I used to change the color, so I called it every animation frame. I would not\r\n//be surprised to hear there is a more efficient way than constantly calling it\r\n//I set it up so a button will change one of the inputs and this function will implement the change\r\n    this.update = function () {\r\n      const THREE = this.context.three;\r\n      this.material.color = new THREE.Color(this.inputs.color);\r\n      this.material.opacity = this.inputs.opacity;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    //This is the function that creates the geometry\r\n    this.onInit = function () {\r\n      //gotta do this context business , not sure how it works, but it allows for the use of the underlying three.js\r\n      const THREE = this.context.three;\r\n\r\n\r\n      var geometry = new THREE.BoxGeometry(.5, .5, .5);\r\n\r\n\r\n      //This is how to wrap an object with a texture/photo.\r\n      //First load the texture\r\n\r\n\r\n      /*\r\n      var texture = new THREE.TextureLoader().load(\r\n        \"../BMcD/perspective-logo-large.png\"\r\n      );\r\n      */\r\n\r\n      //Then map this texture to the material\r\n      //this.material = new THREE.MeshLambertMaterial({map: texture});\r\n\r\n      //Viola\r\n\r\n\r\n\r\n      //Check out the three.js documentation to mess with the material. (https://threejs.org/)\r\n      //It will change how the light reflects off the object. Perhaps another way to display modes?\r\n      //this.material = new THREE.MeshPhongMaterial();\r\n\r\n      //Regular ole textureless cube, with a nice color\r\n      this.material = new THREE.MeshLambertMaterial();\r\n      this.material.color = new THREE.Color(this.inputs.color);\r\n\r\n      //Transparency must be true to change the opacity\r\n      this.material.transparent = true;\r\n\r\n      //Now you can make stuff translucent. Also a good way to display different modes/situation\r\n      //I wanted to find a way to make the entire scene translucent to see overlap between objects n whatnot\r\n      this.material.opacity = this.inputs.opacity;\r\n\r\n      //Make the shape real, create the mesh\r\n      var mesh = new THREE.Mesh(geometry, this.material);\r\n\r\n      //This allows the object to distort the cursor so to be clickable\r\n      this.outputs.objectRoot = mesh;\r\n      this.outputs.collider = mesh;\r\n\r\n    };\r\n\r\n    //////////////////////////////////////////////////////////////////////////\r\n    //Events are yuge\r\n    this.onEvent = function (eventType: string) {\r\n      //If you plan to change shape with events, gotta get the context first\r\n      //const THREE = this.context.three;\r\n\r\n\r\n      //I updated the sdk on August 3rd and now there are ton of events of which I am uncertain on how to use\r\n      //The general structure I used is:\r\n\r\n      //if(eventType == \"\"INTERACTION.WHATEVER\")\r\n      //{\r\n      //do some stuff\r\n      //}\r\n\r\n\r\n      //Click events\r\n      //I used variable like {eventType}Count to determine to have select and deselect functionality\r\n      //I just used modulo clickCount to determine if it's odd or even\r\n\r\n      /*if ((this.eventType = \"INTERACTION.CLICK\" && clickCount % 2 == 0)) {\r\n        clickCount++;\r\n        this.material.color = new THREE.Color(\"royalblue\");\r\n      } else if (\r\n        (this.eventType = \"INTERACTION.CLICK\" && clickCount % 2 != 0)\r\n      ) {\r\n        clickCount++;\r\n        this.material.color = new THREE.Color(\"white\");\r\n      }*/\r\n\r\n      //hover events\r\n      //Basically the same things as the click deal. For hover events, the event fires when you hover and unhover\r\n      /*\r\n      if (eventType == \"INTERACTION.HOVER\" && hoverCount % 2 == 0) {\r\n        this.material.color = new THREE.Color(this.inputs.color);\r\n        hoverCount++;\r\n      } else if (eventType == \"INTERACTION.HOVER\" && hoverCount % 2 != 0) {\r\n        this.inputs.color = \"royalblue\"\r\n        this.material.color = new THREE.Color(this.inputs.color);\r\n        hoverCount++;\r\n      }\r\n       */\r\n\r\n\r\n      //drag events\r\n      //Drag events are fired every animation frame, so it will not work to do a while. This if statement will be called\r\n      //every frame\r\n      if (eventType == \"INTERACTION.DRAG\") {\r\n\r\n        //var cartesian = getCursorPosition();\r\n\r\n        //I sort of cheated and went straight to the node that I had already created to change the location. I think it would be better to\r\n        //add another input to this component definition and then use that to change the location in the node\r\n\r\n        //here.obj3D.position.set(cartesian[0], 0.5, cartesian[2]);\r\n      }\r\n    };\r\n\r\n    //Matterport does this in all their examples. I think it would be good to put the update function calls in hear, and then just call onTick\r\n    this.onTick = function (tickDelta) {};\r\n\r\n  }\r\n\r\n//Now make the factory function and register the component with the sdk\r\n  function renderableFactory(){\r\n    return new Renderable();\r\n  };\r\n  sdk.Scene.register(\"testy\", renderableFactory);\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n/*  function Rack() {\r\n    this.inputs = {\r\n      name: null,\r\n      visible: false,\r\n      color: \"yellow\",\r\n      opacity: 1,\r\n    };\r\n\r\n    this.update = function () {\r\n      const THREE = this.context.three;\r\n      this.material.color = new THREE.Color(this.inputs.color);\r\n      this.material.opacity = this.inputs.opacity;\r\n    }\r\n\r\n    this.onInit = function () {\r\n\r\n    };\r\n    this.onEvent = function (eventType: string) {\r\n\r\n      if (eventType == \"INTERACTION.HOVER\" && hoverCount % 2 == 0) {\r\n        hoverCount++;\r\n      } else if (eventType == \"INTERACTION.HOVER\" && hoverCount % 2 != 0) {\r\n        hoverCount++;\r\n      }\r\n\r\n      //drag events (ha)\r\n      if (eventType == \"INTERACTION.DRAG\") {\r\n        var cartesian = getCursorPosition();\r\n        here.obj3D.position.set(cartesian[0], 0.5, cartesian[2]);\r\n      }\r\n    };\r\n\r\n    this.onTick = function (tickDelta) {};\r\n\r\n  }\r\n\r\n\r\n  function rackFactory() {\r\n    return new Rack();\r\n  }\r\n  sdk.Scene.register(\"testy\", rackFactor);*/\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////\r\n  //this spawner will be where new stuff will be spawned. This is a three.js primitives\r\n\r\n  var spawnerPosition = [-5, 0.1, 5.5];\r\n\r\n  function Spawner() {\r\n    this.inputs = {\r\n      name: null,\r\n      visible: false,\r\n      color: \"white\",\r\n      opacity: 1,\r\n    };\r\n\r\n    this.update = function () {\r\n      const THREE = this.context.three;\r\n      this.material.color = new THREE.Color(this.inputs.color);\r\n      this.material.opacity = this.inputs.opacity;\r\n    }\r\n\r\n    this.onInit = function () {\r\n      const THREE = this.context.three;\r\n      var geometry = new THREE.CylinderGeometry(.5, .5, .01, 50);\r\n\r\n      this.material = new THREE.MeshLambertMaterial();\r\n      this.material.color = new THREE.Color(this.inputs.color);\r\n      this.material.transparent = true;\r\n      this.material.opacity = this.inputs.opacity;\r\n\r\n      var mesh = new THREE.Mesh(geometry, this.material);\r\n      this.outputs.objectRoot = mesh;\r\n      this.outputs.collider = mesh;\r\n    };\r\n    this.onEvent = function (eventType: string) {\r\n      if (eventType == \"INTERACTION.DRAG\") {\r\n        var cartesian = getCursorPosition();\r\n        spawnNode.obj3D.position.set(cartesian[0], .1, cartesian[2]);\r\n        spawnerPosition = cartesian;\r\n      }\r\n    };\r\n\r\n    this.onTick = function (tickDelta) {};\r\n\r\n  }\r\n\r\n  function spawnFactory() {\r\n    return new Spawner();\r\n  }\r\n  sdk.Scene.register(\"spawn\", spawnFactory);\r\n\r\n  const spawnNode = await sdk.Scene.createNode();\r\n\r\n  const spawner = spawnNode.addComponent(\"spawn\");\r\n\r\n  //Gotta do this in order to make the events usable.\r\n  spawner.events[\"INTERACTION.HOVER\"] = true;\r\n  spawner.events[\"INTERACTION.DRAG\"] = true;\r\n  spawner.events[\"INTERACTION.CLICK\"] = true;\r\n\r\n  //The position is controlled from the node. This is a little odd, which is why\r\n  spawnNode.obj3D.position.set(-5, .1, 5.5)\r\n  spawner.inputs.opacity = 1;\r\n  spawnNode.start();\r\n  //end of spawner definition\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  //This was the method for creating multiple instances of the same object. THe end goal was to have a palette of objects to choose from\r\n  //Possibly link the palette the 3D library online\r\n  var rackArray = [];\r\n  var rackNodeArray = [];\r\n  var rackIndex = 0;\r\n  var rackSelected = 0;\r\n  var pastRackSelection = 0;\r\n\r\n//New object button\r\n  document.getElementById(\"clickMe6\").onclick = async function newRack() {\r\n\r\n    //Create new node. Because each node has obj3D.position so we need a new node for each\r\n    rackNodeArray[rackIndex] = await sdk.Scene.createNode();\r\n\r\n    //Load the rack and link it to the node\r\n    rackArray[rackIndex] = rackNodeArray[rackIndex].addComponent(sdk.Scene.Component.FBX_LOADER, {\r\n      url: \"./fbx/Telecom/Telecom.fbx\",\r\n    });\r\n\r\n    //This is the scale necessary for this specific fbx model. THis required tuning that was a bit of a hassle to do\r\n    //I loaded the object into the model with the scale of 1, then measured a side. I used this as the scale factor using the true measurement\r\n    rackArray[rackIndex].inputs.localScale = {\r\n      x: 0.022,\r\n      y: 0.022,\r\n      z: 0.022,\r\n    };\r\n\r\n    //This spawns the object at the spawner\r\n    rackNodeArray[rackIndex].obj3D.position.set(spawnerPosition[0], 0, spawnerPosition[2]);\r\n    rackArray[rackIndex].events[\"INTERACTION.HOVER\"] = true;\r\n    rackArray[rackIndex].events[\"INTERACTION.DRAG\"] = true;\r\n    rackArray[rackIndex].events[\"INTERACTION.CLICK\"] = true;\r\n\r\n    //The name is the method I used to determine which rack was selected\r\n    rackArray[rackIndex].name = rackIndex;\r\n    console.log(rackNodeArray[rackIndex]);\r\n    console.log(rackArray[rackIndex]);\r\n\r\n    //Here are the events. Events are loaded into the component, not the node\r\n    rackArray[rackIndex].onEvent = function (eventType: string) {\r\n\r\n      //Clicking the rack will select the rack\r\n      if (eventType == \"INTERACTION.CLICK\") {\r\n        pastRackSelection = rackSelected;\r\n        console.log(pastRackSelection);\r\n        rackSelected = this.name;\r\n        console.log(rackSelected)\r\n      }\r\n\r\n      //I also select the rack if the user drags it. The selection will come in handy if a toolbox is developed\r\n      if (eventType == \"INTERACTION.DRAG\") {\r\n        pastRackSelection = rackSelected;\r\n        rackSelected = this.name;\r\n\r\n        var cartesian = getCursorPosition();\r\n\r\n        //This is was the method to determine which face the user is clicking. cartesian[3], cartesian[4], and cartesian[5] are the normal positions for x, y, and z respectively\r\n        //If the face in the x or -x direction is clicked, only move in the +/- z direction\r\n        if(cartesian[3] == 1 || cartesian[3] ==  -1)\r\n        {\r\n          rackNodeArray[rackSelected].obj3D.position.z = cartesian[2];\r\n\r\n        }\r\n\r\n        //If the face in the y direction (only the top from dollhouse view) is clicked, it can move in the x-z plane\r\n        if(cartesian[4] == 1)\r\n        {\r\n          rackNodeArray[rackSelected].obj3D.position.set(cartesian[0], 0, cartesian[2])\r\n        }\r\n\r\n        //If the face in the z or -z direction is clicked, only move in the +/- x direction\r\n        if(cartesian[5] == 1 || cartesian[5] ==  -1)\r\n        {\r\n          rackNodeArray[rackSelected].obj3D.position.x = cartesian[0];\r\n        }\r\n       }\r\n\r\n      //Attempt at one of the new events\r\n      if (eventType == \"INTERACTION.SCROLL\") {\r\n        console.log(\"scrollin scrollin scrollin\")\r\n      }\r\n\r\n    };\r\n\r\n    //Start it and increment the index\r\n    rackNodeArray[rackIndex].start();\r\n    rackIndex++;\r\n\r\n  }\r\n\r\n//Delete the selected rack\r\n  document.getElementById(\"clickMe7\").onclick = async function deleteRack() {\r\n\r\n    //Stop the node\r\n    rackNodeArray[rackSelected].stop();\r\n\r\n    //I do not want to pop/slice the deleted rack cuz then our indices are off. So I replace them with null placeholders\r\n    rackNodeArray[rackSelected] = null\r\n    rackArray[rackSelected] = null\r\n  }\r\n\r\n  //Rotate the selected rack. When there are more than just racks, a directory should be used to determine which object is selected\r\n  //I was thinking a naming system that would be a array of [\"object string\", integer name]. Then only one rotate button would be necessary\r\n  //Instead of a bunch of buttons for each type of object.\r\n  document.getElementById(\"clickMe8\").onclick = async function rotateRack() {\r\n    //It may be better to use a slider, because sometimes the layout is not always square to the object faces. This will help with the feng shui\r\n   rackNodeArray[rackSelected].obj3D.rotation.y += Math.PI/2;\r\n  }\r\n\r\n\r\n  //This is a poor patch for the bug with the spawner. For some reason when the user first clicks the spawner it disapears, but after this button is clicked, it's all good.\r\n  //I do not know why this happens\r\n  document.getElementById(\"clickMe9\").onclick = async function find() {\r\n    spawnNode.obj3D.position.set(-5, .1, 5.5)\r\n  }\r\n\r\n\r\n  //This is the save button. It will automatically download the \"Scene.json\" file\r\n  document.getElementById(\"clickMe10\").onclick = async function save() {\r\n    //Gotta give it the nodes\r\n    var scene = await sdk.Scene.serialize(rackNodeArray)\r\n\r\n    //Now save the sucker\r\n    var file = new File([scene], \"Scene.json\", {type: \"text/plain;charset=utf-8\"});\r\n    FileSaver.saveAs(file);\r\n  }\r\n\r\n  //This is the load button\r\n  var file = null;\r\n  var nodes = [];\r\n  var reader =  new FileReader()\r\n  const fileSelector = document.getElementById('clickMe11');\r\n  fileSelector.addEventListener('change', async (event) => {\r\n        //I had to cheat. I don't know why but I need this event.target.files, and it'll give me errors if I dont ts-ignor it\r\n        // @ts-ignore\r\n        const fileList = event.target.files;\r\n\r\n        //I had to take this from the internet. I don't know what's going on in the background.\r\n        reader.onload = async function () {\r\n          file = reader.result;\r\n          console.log(file);\r\n          nodes = await sdk.Scene.deserialize(file);\r\n          console.log(nodes);\r\n\r\n          var i = 0;\r\n          for (i = 0; i < nodes.length; i++) {\r\n\r\n            //I name the nodes, which is sort of pointless right now\r\n            //Because this deserialize method is just the nodes, it seems like I do not have access to the\r\n            //Component. If I could access the component, it would be easy to load the racks and we'd be good to go\r\n            //Because of I'm not accessing the components, I can't change/create the onEvent function, so all the\r\n            //racks are stuck\r\n            nodes[i].name = i;\r\n            nodes[i].start();\r\n            console.log(nodes[i]);\r\n            console.log(rackSelected);\r\n          }\r\n\r\n\r\n        }\r\n\r\n        reader.readAsText(fileList[0]);\r\n      }\r\n  );\r\n\r\n  console.log(sdk)\r\n\r\n  //This is the sort of animation dealio. Gotta do it, not sure why\r\n  const tick = function () {\r\n    requestAnimationFrame(tick);\r\n    //fan.obj3D.rotation.y = rot;\r\n    // rot = rot + 0.02\r\n  //bull.update();\r\n  //updateSelection();\r\n  };\r\n\r\n  //Looks recursive idk\r\n  tick();\r\n});\r\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || new Function(\"return this\")();\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n"],"sourceRoot":""}